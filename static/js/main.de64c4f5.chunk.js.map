{"version":3,"sources":["TableElements.js","Activities.js","Calculations.js","PartyTable.js","Items.js","ActivityTable.js","App.js","reportWebVitals.js","index.js"],"names":["PartyUsersRow","props","userCells","users","map","user","HeaderCellHover","userID","user_id","value","username","handleDelete","handleDeleteUser","EditableCell","id","handleChange","handleUsernameChange","className","AddButton","handleAdd","handleAddUser","ActivityUsersRow","UserCell","PlaceholderRow","rowType","buttonType","type","editable","placeholderCells","usersID","push","PlaceholderCell","activityID","TotalRow","usersExpensesEntries","Object","entries","expenses","rowName","expense","ExpenseCell","forPartyTable","toString","ActivityCell","onClick","handleActivityClick","contentEditable","useRef","charLimit","activityHeader","innerRef","html","spellCheck","onChange","e","console","log","target","numbersOnly","onKeyDown","code","preventDefault","ctrlKey","allowedKeys","includes","innerHTML","length","num","RegExp","test","key","preventFormatting","disabled","useState","isHovered","setHovered","onMouseOver","onMouseOut","DeleteButton","visible","itemID","children","xmlns","width","height","fill","viewBox","d","args","style","position","right","display","ParticipationCheckbox","defaultChecked","handleCheckboxClick","checked","PurchaseRadioButton","name","ActivityRow","checkboxes","partyUsersID","activityUsers","handleDeleteActivity","activityName","activityExpense","Activities","activitiesExpenses","activities","items","activityExpenses","activity","activity_id","activityItems","filter","item","items_id","item_id","parseFloat","item_price","calcActivityExpenses","totalUsersFinance","fromEntries","partialExpense","users_id","bought_by","Math","round","calcTotalUsersFinance","usersExpenses","usersDebt","debt","activitiesRows","activity_name","handleAddActivity","PartyTable","handleParticipationClick","ItemRow","radioButtons","itemBoughtBy","handleDeleteItem","itemName","handleItemNameChange","itemPrice","handleExpenseChange","Items","activityUsersExpenses","activityUserExpenses","calcActivityUserExpenses","itemsRows","item_name","handleAddItem","ActivityTable","selectedActivity","handleActivityNameChange","handlePurchaseClick","App","currUsers","setCurrUsers","currActivities","setCurrActivities","setSelectedActivity","currItems","setCurrItems","useEffect","getMaxID","state","property","max","obj","alert","newUser","prevState","updateActivityItems","action","updatedItemsID","splice","indexOf","find","updatedUsersID","some","newActivity","newItemID","newItem","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.de64c4f5.chunk.js","sourcesContent":["import {useState, useRef} from \"react\";\nimport ContentEditable from \"react-contenteditable\";\n\n/* Rows */\n\nexport function PartyUsersRow(props) {\n    const userCells = props.users.map(user => <HeaderCellHover key={user.user_id}\n                                                               userID={user.user_id}\n                                                               value={user.username}\n                                                               handleDelete={props.handleDeleteUser}>\n            <EditableCell value={user.username}\n                          id={user.user_id}\n                          handleChange={props.handleUsernameChange}\n            />\n        </HeaderCellHover>\n    );\n    return (\n        <div className=\"table-row users-row\">\n            <div className=\"table-cell header-cell\">X</div>\n            {userCells}\n            <AddButton handleAdd={props.handleAddUser}/>\n            <div className=\"table-cell header-cell\">\n                <i>Expenses</i>\n            </div>\n        </div>\n    );\n}\n\nexport function ActivityUsersRow(props) {\n    const userCells = props.users.map(user =>\n        <UserCell key={user.user_id} value={user.username}/>\n    );\n    return (\n        <div className=\"table-row users-row\">\n            <div className=\"table-cell header-cell\">X</div>\n            {userCells}\n            <div className=\"table-cell header-cell\">\n                <i>Expenses</i>\n            </div>\n        </div>\n    );\n}\n\nexport function PlaceholderRow(props) {\n    const rowType = {\n        buttonType: props.type === 'activity' ? 'checkbox' : 'radio',\n        editable: props.type !== 'activity'\n    }\n    let placeholderCells = [];\n    for (const userID of props.usersID) {\n        placeholderCells.push(\n            <PlaceholderCell key={userID} buttonType={rowType.buttonType}/>\n        );\n    }\n    placeholderCells.push(<PlaceholderCell key={-1} buttonType={rowType.buttonType}/>);\n\n    return (\n        <div className=\"table-row placeholder-row\">\n            <AddButton id={props.activityID} handleAdd={props.handleAdd}/>\n            {placeholderCells}\n            <div className={\"table-cell\"}></div>\n        </div>\n    );\n}\n\nexport function TotalRow(props) {\n    const usersExpensesEntries = Object.entries(props.expenses);\n    return (\n        <div className=\"table-row total-row\">\n            <div className=\"table-cell header-cell\"><i>{'Total' && props.rowName}</i></div>\n            {usersExpensesEntries.map(expense => <ExpenseCell key={expense[0]} value={expense[1]}/>)}\n            {props.forPartyTable && <div className=\"table-cell placeholder-cell\"></div>}\n            <div className=\"table-cell header-cell\">X</div>\n        </div>\n    );\n}\n\n/* Cells */\n\nfunction UserCell(props) {\n    return (\n        <div className={\"table-cell header-cell\"}>\n            <div className={\"header username\"}>\n                {props.value.toString()}\n            </div>\n        </div>\n    );\n}\n\nexport function PlaceholderCell(props) {\n    return (\n        <div className=\"table-cell placeholder-cell\">\n            <input className=\"check-button placeholder-check-button\"\n                   type={props.buttonType}\n            />\n        </div>\n    );\n}\n\nexport function ActivityCell(props) {\n    const handleClick = () => {\n        props.handleActivityClick(props.activityID);\n    }\n    return (\n        <div className={\"header activity-name\"} onClick={handleClick}>\n            {props.value.toString()}\n        </div>\n    );\n}\n\nexport function ExpenseCell(props) {\n    return (\n        <div className={\"table-cell\"}>\n            <div className=\"table-cell expense-cell\">\n                {props.value.toString()}\n            </div>\n        </div>\n    );\n}\n\n/**\n * Contenteditable-friendly cell for changing data\n * @param props\n * @returns {JSX.Element}\n * @constructor\n */\nexport function EditableCell(props) {\n    const contentEditable = useRef();\n    const handleChange = e => {\n        console.log(e.target.value);\n        props.numbersOnly ?\n            props.handleChange(e.target.value, props.id)\n            : props.handleChange(e.target.value, props.id);\n    };\n\n    const charLimit = props.charLimit || 7;\n\n    const preventFormatting = (e, numbersOnly) => {\n        if (e.code === \"Enter\") {\n            e.preventDefault();\n        }\n        if (e.ctrlKey) {\n            switch (e.code) {\n                case \"KeyB\":\n                    e.preventDefault();\n                    break;\n                case \"KeyI\":\n                    e.preventDefault();\n                    break;\n                case \"KeyU\":\n                    e.preventDefault();\n                    break;\n                default:\n                    break;\n            }\n        }\n\n        const allowedKeys = [\"Backspace\", \"Delete\",\n            \"ArrowLeft\", \"ArrowRight\", \"ArrowUp\", \"ArrowDown\"];\n\n        if (!allowedKeys.includes(e.code) && e.target.innerHTML.length >= charLimit) {\n            e.preventDefault();\n        }\n\n        if (numbersOnly && e.target.innerHTML.includes(\".\") && e.code === \"Period\") {\n            e.preventDefault();\n        }\n\n        const num = new RegExp('[0-9.]');\n\n        if (numbersOnly && !allowedKeys.includes(e.code) && !num.test(e.key)) {\n            e.preventDefault();\n        }\n\n    }\n\n    return (\n        <ContentEditable\n            className={props.activityHeader ? \"activity-header\" : \"header\"}\n            innerRef={contentEditable}\n            html={props.value}\n            spellCheck={false}\n            onChange={handleChange}\n            onKeyDown={e => preventFormatting(e, props.numbersOnly)}\n            disabled={props.disabled}\n        />\n    );\n}\n\n/**\n * Plain header cell wrapper\n * @param props\n * @returns {JSX.Element}\n * @constructor\n */\nexport function HeaderCell(props) {\n    return (\n        <div className={\"table-cell header-cell\"}>\n            {props.value}\n            {props.children}\n        </div>\n    );\n}\n\n/**\n * Header cell with delete button used for users, activities, items\n * @param props\n * @returns {JSX.Element}\n * @constructor\n */\nexport function HeaderCellHover(props) {\n    const [isHovered, setHovered] = useState(false);\n\n    const handleMouseOver = () => {\n        setHovered(true);\n    }\n    const handleMouseOut = () => {\n        setHovered(false);\n    }\n\n    return (\n        <div className=\"table-cell header-cell\"\n             onMouseOver={handleMouseOver}\n             onMouseOut={handleMouseOut}>\n            <DeleteButton visible={isHovered}\n                          handleDelete={props.handleDelete}\n                          userID={props.userID}\n                          activityID={props.activityID}\n                          itemID={props.itemID}/>\n            {props.children}\n        </div>\n    );\n}\n\n/* Buttons */\n\n/**\n * Returns a plus button used to add users, activities\n * @param props\n * @returns {JSX.Element}\n * @constructor\n */\nfunction AddButton(props) {\n    const handleClick = () => {\n        props.handleAdd(props.id);\n    }\n    return (\n        <div className=\"table-cell add-button-cell\">\n            <svg xmlns=\"http://www.w3.org/2000/svg\"\n                 onClick={handleClick}\n                 width=\"20\" height=\"100%\" fill=\"currentColor\"\n                 className=\"bi bi-plus\"\n                 viewBox=\"0 0 16 16\">\n                <path\n                    d=\"M8 4a.5.5 0 0 1 .5.5v3h3a.5.5 0 0 1 0 1h-3v3a.5.5 0 0 1-1 0v-3h-3a.5.5 0 0 1 0-1h3v-3A.5.5 0 0 1 8 4z\"/>\n            </svg>\n        </div>\n    );\n}\n\n/**\n * Returns a cross button used to delete users, activities, items\n * @param props\n * @returns {JSX.Element}\n * @constructor\n */\nfunction DeleteButton(props) {\n    const args = {\n        userID: props.userID,\n        activityID: props.activityID,\n        itemID: props.itemID\n    };\n    const handleClick = () => {\n        props.handleDelete(args);\n    }\n    const style = {\n        position: \"relative\",\n        right: 45,\n        display: props.visible ? \"block\" : \"none\"\n    }\n    return (\n        <svg xmlns=\"http://www.w3.org/2000/svg\"\n             onClick={handleClick}\n             style={style}\n             width=\"20\" height=\"100%\" fill=\"currentColor\"\n             className=\"bi bi-x\"\n             viewBox=\"0 0 16 16\">\n            <path\n                d=\"M4.646 4.646a.5.5 0 0 1 .708 0L8 7.293l2.646-2.647a.5.5 0 0 1 .708.708L8.707 8l2.647 2.646a.5.5 0 0 1-.708.708L8 8.707l-2.646 2.647a.5.5 0 0 1-.708-.708L7.293 8 4.646 5.354a.5.5 0 0 1 0-.708z\"/>\n        </svg>\n    );\n}\n\n/**\n * Returns a checkbox used in PartyTable\n *\n * @param props\n * @returns {JSX.Element}\n * @constructor\n */\nexport function ParticipationCheckbox(props) {\n    const handleClick = (e) => {\n        props.handleCheckboxClick(e.target.checked, props.activityID, props.userID);\n    }\n    return (\n        <div className=\"table-cell checkbox-cell\">\n            <input className=\"check-button\"\n                   type=\"checkbox\"\n                   defaultChecked={props.defaultChecked}\n                   onClick={handleClick}/>\n        </div>\n    );\n}\n\n/**\n * Returns a radio button used in ActivityTable\n *\n * @param props\n * @returns {JSX.Element}\n * @constructor\n */\nexport function PurchaseRadioButton(props) {\n    const handleClick = () => {\n        props.handleCheckboxClick(props.itemID, props.userID);\n    }\n    return (\n        <div className=\"table-cell radio-button-cell\">\n            <input className=\"check-button\"\n                   type=\"radio\"\n                   name={props.itemID}\n                   defaultChecked={props.defaultChecked}\n                   onClick={handleClick}/>\n        </div>\n    );\n}","import {\n    ActivityCell,\n    ParticipationCheckbox,\n    TotalRow,\n    PlaceholderCell,\n    PlaceholderRow, HeaderCellHover, ExpenseCell\n} from \"./TableElements\";\nimport {calcActivityExpenses, calcTotalUsersFinance} from './Calculations';\n\n\nfunction ActivityRow(props) {\n    let checkboxes = [];\n    for (const userID of props.partyUsersID) {\n        checkboxes.push(<ParticipationCheckbox key={props.activityID.toString() + userID.toString()}\n                                               handleCheckboxClick={props.handleCheckboxClick}\n                                               activityID={props.activityID}\n                                               userID={userID}\n                                               defaultChecked={props.activityUsers.includes(userID)}\n        />);\n    }\n    return (\n        <div className=\"table-row activity-row\">\n            <HeaderCellHover\n                activityID={props.activityID}\n                handleDelete={props.handleDeleteActivity}\n            >\n                <ActivityCell\n                    activityID={props.activityID}\n                    value={props.activityName}\n                    handleActivityClick={props.handleActivityClick}\n                />\n            </HeaderCellHover>\n            {checkboxes}\n            <PlaceholderCell buttonType=\"checkbox\"/>\n            <ExpenseCell value={props.activityExpense}/>\n        </div>\n    );\n}\n\nfunction Activities(props) {\n    const partyUsersID = props.users.map(user => user.user_id);\n    const activitiesExpenses = calcActivityExpenses(props.activities, props.items);\n    const totalUsersFinance = calcTotalUsersFinance(props.users, props.activities, props.items, activitiesExpenses);\n    const usersExpenses = totalUsersFinance.expenses;\n    const usersDebt = totalUsersFinance.debt;\n\n    let activitiesRows = [];\n\n    for (const activity of props.activities) {\n        const activityID = activity.activity_id;\n        const activityName = activity.activity_name;\n        const activityUsers = activity.users_id;\n        const activityItems = props.items.filter(item => activity.items_id.includes(item.item_id));\n\n        activitiesRows.push(<ActivityRow key={activityID}\n                                         activity={activity}\n                                         activityID={activityID}\n                                         activityName={activityName}\n                                         activityUsers={activityUsers}\n                                         activityItems={activityItems}\n                                         activityExpense={activitiesExpenses[activityID]}\n                                         partyUsersID={partyUsersID}\n                                         handleActivityClick={props.handleActivityClick}\n                                         handleCheckboxClick={props.handleCheckboxClick}\n                                         handleDeleteActivity={props.handleDeleteActivity}\n        />);\n    }\n\n    activitiesRows.push(<PlaceholderRow key={-1}\n                                        usersID={partyUsersID}\n                                        type={\"activity\"}\n                                        handleAdd={props.handleAddActivity}/>);\n    activitiesRows.push(<TotalRow key={-2} rowName={'Total'} expenses={usersExpenses} forPartyTable={true}/>);\n    activitiesRows.push(<TotalRow key={-3} rowName={'Debt'} expenses={usersDebt} forPartyTable={true}/>);\n\n    return activitiesRows;\n}\n\nexport default Activities;","/**\n * Sums prices of items for all activities\n * Used in PartyTable's \"Expenses\" column\n *\n * @param activities\n * @param items\n * @returns {{}}\n */\nexport function calcActivityExpenses(activities, items) {\n    let activityExpenses = {};\n\n    for (const activity of activities) {\n        activityExpenses[activity.activity_id] = 0;\n        const activityItems = items.filter(item => activity.items_id.includes(item.item_id));\n        for (const item of activityItems) {\n            activityExpenses[activity.activity_id] += parseFloat(item.item_price);\n        }\n    }\n    return activityExpenses;\n}\n\n\n/**\n * Calculates total expenses and debt data for all users in PartyTable\n * Used in TotalRow component\n *\n * @param users\n * @param activities\n * @param items\n * @param activitiesExpenses\n * @returns {{debt: {[p: string]: any}, expenses: {[p: string]: any}}}\n */\nexport function calcTotalUsersFinance(users, activities, items, activitiesExpenses) {\n    let totalUsersFinance = {\n        'expenses': Object.fromEntries(users.map(user => [user.user_id, 0])),\n        'debt': Object.fromEntries(users.map(user => [user.user_id, 0]))\n    };\n\n    for (const activity of activities) {\n\n        const partialExpense = activitiesExpenses[activity.activity_id] / activity.users_id.length;\n        const activityItems = items.filter(item => activity.items_id.includes(item.item_id));\n\n        for (const userID of activity.users_id) {\n            totalUsersFinance['expenses'][userID] += partialExpense;\n            totalUsersFinance['debt'][userID] += partialExpense;\n        }\n        for (const item of activityItems) {\n            if (item.bought_by !== null) {\n                totalUsersFinance['debt'][item.bought_by] -= parseFloat(item.item_price);\n            }\n        }\n    }\n\n    for (const userID in totalUsersFinance.expenses) {\n        totalUsersFinance['expenses'][userID] = Math.round(totalUsersFinance['expenses'][userID] * 100) / 100;\n        totalUsersFinance['debt'][userID] = Math.round(totalUsersFinance['debt'][userID] * 100) / 100;\n    }\n    return totalUsersFinance;\n}\n\n\n/**\n * Caclulates users' expenses in ActivityTable\n * Used in TotalRow component\n *\n * @param usersID\n * @param items\n * @returns {{}}\n */\nexport function calcActivityUserExpenses(usersID, items) {\n    let activityUserExpenses = Object.fromEntries(usersID.map(userID => [userID, 0]));\n    for (const item of items) {\n        if (item.bought_by !== null) {\n            activityUserExpenses[item.bought_by] += parseFloat(item.item_price);\n        }\n    }\n    return activityUserExpenses;\n}","import Activities from \"./Activities\";\nimport {PartyUsersRow} from \"./TableElements\";\n\n\nfunction PartyTable(props) {\n\n    return (\n        <div className=\"table-wrapper\">\n            <h1>Dacha</h1>\n            <div className=\"table party-table\">\n                <PartyUsersRow users={props.users}\n                               handleAddUser={props.handleAddUser}\n                               handleDeleteUser={props.handleDeleteUser}\n                               handleUsernameChange={props.handleUsernameChange}\n                />\n                <Activities activities={props.activities}\n                            items={props.items}\n                            users={props.users}\n                            handleActivityClick={props.handleActivityClick}\n                            handleCheckboxClick={props.handleParticipationClick}\n                            handleAddActivity={props.handleAddActivity}\n                            handleDeleteActivity={props.handleDeleteActivity}\n                />\n            </div>\n        </div>\n    );\n}\n\nexport default PartyTable;","import {\n    HeaderCellHover,\n    PlaceholderRow,\n    PurchaseRadioButton,\n    TotalRow, EditableCell\n} from \"./TableElements\";\nimport {calcActivityUserExpenses} from \"./Calculations\";\n\n\nfunction ItemRow(props) {\n    let radioButtons = [];\n    for (const userID of props.usersID) {\n        radioButtons.push(<PurchaseRadioButton key={props.itemID.toString() + userID.toString()}\n                                               handleCheckboxClick={props.handleCheckboxClick}\n                                               activityID={props.activityID}\n                                               itemID={props.itemID}\n                                               userID={userID}\n                                               defaultChecked={userID === props.itemBoughtBy}\n        />);\n    }\n\n    return (\n        <div className=\"table-row item-row\">\n            <HeaderCellHover\n                activityID={props.activityID}\n                itemID={props.itemID}\n                handleDelete={props.handleDeleteItem}\n            >\n                <EditableCell id={props.itemID}\n                              value={props.itemName}\n                              handleChange={props.handleItemNameChange}\n                />\n            </HeaderCellHover>\n            {radioButtons}\n            <div className={\"table-cell\"}>\n                <EditableCell id={props.itemID}\n                              value={props.itemPrice.toString()}\n                              handleChange={props.handleExpenseChange}\n                              numbersOnly={true}\n                />\n            </div>\n        </div>\n    );\n}\n\n\nfunction Items(props) {\n    const usersID = props.users.map(user => user.user_id);\n    const activityUsersExpenses = calcActivityUserExpenses(usersID, props.items);\n    let itemsRows = [];\n\n    for (const item of props.items) {\n        const itemID = item.item_id;\n        const itemName = item.item_name;\n        const itemBoughtBy = item.bought_by;\n        const itemPrice = item.item_price;\n        itemsRows.push(<ItemRow key={itemID}\n                                activityID={props.activity.activity_id}\n                                itemID={itemID}\n                                itemName={itemName}\n                                itemBoughtBy={itemBoughtBy}\n                                itemPrice={itemPrice}\n                                usersID={usersID}\n                                handleCheckboxClick={props.handleCheckboxClick}\n                                handleDeleteItem={props.handleDeleteItem}\n                                handleItemNameChange={props.handleItemNameChange}\n                                handleExpenseChange={props.handleExpenseChange}\n        />);\n    }\n\n    itemsRows.push(<PlaceholderRow key={-1}\n                                   usersID={usersID}\n                                   handleAdd={props.handleAddItem}\n                                   activityID={props.activity.activity_id}\n    />);\n    itemsRows.push(<TotalRow key={-2}\n                             rowName={'Total'}\n                             expenses={activityUsersExpenses}\n                             forPartyTable={false}\n    />);\n\n    return itemsRows;\n}\n\nexport default Items;","import Items from \"./Items\";\nimport {ActivityUsersRow, EditableCell} from \"./TableElements\";\n\n\nfunction ActivityTable(props) {\n\n    const selectedActivity = props.selectedActivity;\n    const activityItems = props.items.filter(item => selectedActivity.items_id.includes(item.item_id));\n\n    return (\n        <div className=\"table-wrapper\">\n            <h2>\n                <EditableCell activityHeader={true}\n                              value={selectedActivity.activity_name}\n                              id={selectedActivity.activity_id}\n                              handleChange={props.handleActivityNameChange}\n                              charLimit={20}/>\n            </h2>\n            <div className=\"table activity-table\">\n                <ActivityUsersRow users={props.users}\n                                  activityID={selectedActivity.activity_id}\n                                  handleAddUser={props.handleAddUser}\n                />\n                <Items activity={props.selectedActivity}\n                       users={props.users}\n                       items={activityItems}\n                       handleCheckboxClick={props.handlePurchaseClick}\n                       handleAddItem={props.handleAddItem}\n                       handleDeleteItem={props.handleDeleteItem}\n                       handleActivityNameChange={props.handleActivityNameChange}\n                       handleItemNameChange={props.handleItemNameChange}\n                       handleExpenseChange={props.handleExpenseChange}\n                />\n            </div>\n        </div>\n    )\n}\n\nexport default ActivityTable;","import React, {useEffect, useState} from \"react\";\nimport './App.css';\nimport PartyTable from \"./PartyTable\";\nimport ActivityTable from \"./ActivityTable\";\nimport users from \"./data/party_users.json\";\nimport activities from \"./data/activities.json\";\nimport items from \"./data/items.json\";\n\n\nfunction App() {\n    const [currUsers, setCurrUsers] = useState([]);\n    const [currActivities, setCurrActivities] = useState([]);\n    const [selectedActivity, setSelectedActivity] = useState();\n    const [currItems, setCurrItems] = useState([]);\n\n    useEffect(() => {\n        setCurrUsers(users.users);\n        setCurrActivities(activities.activities);\n        setCurrItems(items.items);\n    }, []);\n\n    const updateActivityTable = activityID => {\n        if (selectedActivity && selectedActivity.activity_name.length === 0) {\n            alert(\"Activity should have name\");\n            return;\n        }\n        const activity = currActivities.find(activity => activity.activity_id === activityID);\n        setSelectedActivity(activity);\n    }\n\n    const handleParticipationClick = (checked, activityID, userID) => {\n        setCurrActivities(prevState => prevState.map(activity => {\n            if (activity.activity_id === activityID) {\n                const updatedUsersID = [...activity.users_id];\n                // e.target.checked ?\n                checked ?\n                    updatedUsersID.push(userID) :\n                    updatedUsersID.splice(updatedUsersID.indexOf(userID), 1);\n\n                // make current activity adopt changes\n                if (selectedActivity && selectedActivity.activity_id === activityID) {\n                    setSelectedActivity({\n                            ...activity,\n                            users_id: updatedUsersID\n                        }\n                    );\n                }\n\n                return {\n                    ...activity,\n                    users_id: updatedUsersID\n                };\n            } else return activity;\n        }));\n    }\n\n    const handlePurchaseClick = (itemID, userID) => {\n        setCurrItems(prevState => prevState.map(item => {\n            if (item.item_id === itemID) {\n                return {\n                    ...item,\n                    bought_by: userID\n                };\n            } else return item;\n        }));\n    }\n\n    // factory and exceptions, when no property || ids\n    const getMaxID = (state, property) => {\n        return Math.max(...state.map(obj => obj[property]));\n    }\n\n    const handleAddUser = () => {\n        if (currUsers.length >= 10) {\n            alert(\"Cannot add a user: 10 users max\")\n            return;\n        }\n        const newUserID = getMaxID(currUsers, \"user_id\") + 1;\n        const newUser = {\n            user_id: newUserID,\n            username: \"User\"\n        };\n\n        setCurrUsers(prevState => [...prevState, newUser]);\n    }\n\n    const handleDeleteUser = props => {\n        if (currItems.some(item => item.bought_by === props.userID)) {\n            alert('Cannot remove the user: they have items purchased')\n            return;\n        }\n\n        setCurrActivities(prevState => prevState.map(activity => {\n            const updatedUsersID = [...activity.users_id];\n\n            if (updatedUsersID.includes(props.userID)) {\n                updatedUsersID.splice(updatedUsersID.indexOf(props.userID), 1);\n            }\n\n            return {\n                ...activity,\n                users_id: updatedUsersID\n            };\n        }));\n\n        setCurrUsers(prevState => prevState.filter(\n            user => user.user_id !== props.userID));\n    }\n\n    const handleAddActivity = () => {\n        const newActivityID = getMaxID(currActivities, \"activity_id\") + 1;\n        const newActivity = {\n            activity_id: newActivityID,\n            activity_name: \"Activity\",\n            users_id: [],\n            items_id: []\n        };\n\n        setCurrActivities(prevState => [...prevState, newActivity]);\n        setSelectedActivity(newActivity);\n    }\n\n    const handleDeleteActivity = props => {\n        setCurrActivities(prevState => prevState.filter(\n            activity => activity.activity_id !== props.activityID));\n        setSelectedActivity();\n    }\n\n    const updateActivityItems = (activityID, itemID, action) => {\n        setCurrActivities(prevState => prevState.map(activity => {\n            if (activity.activity_id === activityID) {\n                const updatedItemsID = [...activity.items_id];\n                action === 'add' ?\n                    updatedItemsID.push(itemID) :\n                    updatedItemsID.splice(updatedItemsID.indexOf(itemID), 1);\n\n                // make current activity adopt changes\n                if (selectedActivity && selectedActivity.activity_id === activityID) {\n                    setSelectedActivity({\n                            ...activity,\n                            items_id: updatedItemsID\n                        }\n                    );\n                }\n\n                return {\n                    ...activity,\n                    items_id: updatedItemsID\n                };\n            } else {\n                return activity;\n            }\n        }));\n        // updateActivityTable(activityID);\n    }\n\n    const handleAddItem = activityID => {\n        const newItemID = getMaxID(currItems, \"item_id\") + 1;\n        const newItem = {\n            item_id: newItemID,\n            item_name: \"Item\",\n            item_price: 0,\n            bought_by: null\n        };\n\n        setCurrItems(prevState => [...prevState, newItem]);\n        updateActivityItems(activityID, newItemID, 'add');\n        // updateActivityTable(activityID);\n    }\n\n    // same item cannot be in two activities\n    const handleDeleteItem = props => {\n        setCurrItems(prevState => prevState.filter(item => item.item_id !== props.itemID));\n        updateActivityItems(props.activityID, props.itemID, 'delete');\n    }\n\n    const handleUsernameChange = (username, userID) => {\n        setCurrUsers(prevState => prevState.map(user => {\n            if (user.user_id === userID) {\n                return {\n                    ...user,\n                    username: username\n                };\n            } else {\n                return user;\n            }\n        }));\n    }\n\n    const handleActivityNameChange = (activityName, activityID) => {\n        setCurrActivities(prevState => prevState.map(activity => {\n            if (activity.activity_id === activityID) {\n\n                // make current activity adopt changes\n                if (selectedActivity && selectedActivity.activity_id === activityID) {\n                    setSelectedActivity({\n                            ...activity,\n                            activity_name: activityName\n                        }\n                    );\n                }\n\n                return {\n                    ...activity,\n                    activity_name: activityName\n                };\n            } else {\n                return activity;\n            }\n        }));\n    }\n\n    const handleItemNameChange = (itemName, itemID) => {\n        setCurrItems(prevState => prevState.map(item => {\n            if (item.item_id === itemID) {\n                return {\n                    ...item,\n                    item_name: itemName\n                }\n            } else {\n                return item;\n            }\n        }));\n    }\n\n    const handleExpenseChange = (expense, itemID) => {\n        setCurrItems(prevState => prevState.map(item => {\n            if (item.item_id === itemID) {\n                return {\n                    ...item,\n                    item_price: expense\n                }\n            } else {\n                return item;\n            }\n        }));\n    }\n\n\n    return (\n        <div className=\"App\">\n            <div className=\"tables-container\">\n                <PartyTable users={currUsers}\n                            activities={currActivities}\n                            items={currItems}\n                            handleActivityClick={updateActivityTable}\n                            handleParticipationClick={handleParticipationClick}\n                            handleAddUser={handleAddUser}\n                            handleDeleteUser={handleDeleteUser}\n                            handleUsernameChange={handleUsernameChange}\n                            handleAddActivity={handleAddActivity}\n                            handleDeleteActivity={handleDeleteActivity}\n                />\n                {selectedActivity ? <ActivityTable users={currUsers}\n                                                   selectedActivity={selectedActivity}\n                                                   items={currItems}\n                                                   handlePurchaseClick={handlePurchaseClick}\n                                                   handleAddUser={handleAddUser}\n                                                   handleAddItem={handleAddItem}\n                                                   handleDeleteItem={handleDeleteItem}\n                                                   handleActivityNameChange={handleActivityNameChange}\n                                                   handleItemNameChange={handleItemNameChange}\n                                                   handleExpenseChange={handleExpenseChange}\n                    /> :\n                    <div>\n                        <br/>\n                        <p>select an activity</p>\n                    </div>\n                }\n            </div>\n        </div>\n\n    );\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n    <React.StrictMode>\n        <App/>\n    </React.StrictMode>\n    ,\n    document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}